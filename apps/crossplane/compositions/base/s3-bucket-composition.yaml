apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: s3bucket-default
spec:
  compositeTypeRef:
    apiVersion: s3.aws.engie.org/v1alpha1
    kind: XBucket
  mode: Pipeline
  pipeline:

    # STEP 1 : Create S3 Bucket
    - step: s3bucket
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: v1
        kind: PatchSet
        resources:
          - name: s3bucket
            base:
              apiVersion: s3.aws.crossplane.io/v1beta1
              kind: Bucket
              spec:
                forProvider:
                  acl: private
                  versioningConfiguration:
                    status: Enabled
                  tagging:
                    tagSet: []
                  publicAccessBlockConfiguration:
                    blockPublicAcls: true
                    blockPublicPolicy: true
                    ignorePublicAcls: true
                    restrictPublicBuckets: true
                providerConfigRef:
                  name: default
                deletionPolicy: Delete
            patches:
              - fromFieldPath: "spec.bucketName"
                toFieldPath: "metadata.name"
              - fromFieldPath: "spec.location"
                toFieldPath: "spec.forProvider.locationConstraint"
              - fromFieldPath: "spec.tags"
                toFieldPath: "spec.forProvider.tagging.tagSet"

    # STEP 2 : SSL POLICY (enabled only if requireSSL=true)
    - step: ssl-policy
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: v1
        kind: PatchSet
        resources:
          - name: sslpolicy
            base:
              apiVersion: s3.aws.crossplane.io/v1beta1
              kind: BucketPolicy
              spec:
                forProvider:
                  bucketRef:
                    name: ""
                  policy: "" # default --> no SSL enforcement
            patches:
              - fromFieldPath: "spec.bucketName"
                toFieldPath: "spec.forProvider.bucketRef.name"
              - fromFieldPath: "spec.requireSSL"
                toFieldPath: "spec.forProvider.policy"
                transforms:
                  - type: map
                    map:
                      "true": |
                        {"Version":"2012-10-17","Statement":[{"Sid":"DenyUnencrypted","Effect":"Deny","Principal":"*","Action":"s3:*","Resource":["arn:aws:s3:::${bucketName}","arn:aws:s3:::${bucketName}/*"],"Condition":{"Bool":{"aws:SecureTransport":"false"}}}]}
                      "false": ""