# apps/crossplane/compositions/base/s3-bucket-composition-secure.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: s3bucket-secure
  labels:
    security: enabled
spec:
  compositeTypeRef:
    apiVersion: s3.aws.engie.org/v1alpha1
    kind: XBucket
  mode: Pipeline
  pipeline:
    - step: s3bucket
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: s3bucket
            base:
              apiVersion: s3.aws.crossplane.io/v1beta1
              kind: Bucket
              spec:
                forProvider:
                  acl: private
                  versioningConfiguration:
                    status: Enabled
                  tagging:
                    tagSet: []
                  serverSideEncryptionConfiguration:
                    rules:
                      - applyServerSideEncryptionByDefault:
                          sseAlgorithm: AES256
                  publicAccessBlockConfiguration:
                    blockPublicAcls: true
                    blockPublicPolicy: true
                    ignorePublicAcls: true
                    restrictPublicBuckets: true
                  # ✅ Policy SSL intégrée directement dans le Bucket
                  policy:
                    version: "2012-10-17"
                    statements:
                      - sid: DenyInsecureTransport
                        effect: Deny
                        principal:
                          allowAnon: true
                        action:
                          - "s3:*"
                        resource: []  # sera patché dynamiquement
                        condition:
                          - operatorKey: Bool
                            conditions:
                              - key: "aws:SecureTransport"
                                stringValue: "false"
                providerConfigRef:
                  name: default
                deletionPolicy: Delete
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: "spec.bucketName"
                toFieldPath: "metadata.name"
              
              - type: FromCompositeFieldPath
                fromFieldPath: "spec.location"
                toFieldPath: "spec.forProvider.locationConstraint"
              
              - type: FromCompositeFieldPath
                fromFieldPath: "spec.tags"
                toFieldPath: "spec.forProvider.tagging.tagSet"
              
              # ✅ Patch le ARN du bucket dans policy.statements[0].resource[0]
              - type: FromCompositeFieldPath
                fromFieldPath: "spec.bucketName"
                toFieldPath: "spec.forProvider.policy.statements[0].resource[0]"
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "arn:aws:s3:::%s"
              
              # ✅ Patch le ARN du bucket dans policy.statements[0].resource[1]
              - type: FromCompositeFieldPath
                fromFieldPath: "spec.bucketName"
                toFieldPath: "spec.forProvider.policy.statements[0].resource[1]"
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "arn:aws:s3:::%s/*"