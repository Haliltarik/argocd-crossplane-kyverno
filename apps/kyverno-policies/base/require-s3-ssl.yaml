# apps/kyverno-policies/base/require-s3-ssl.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: audit-s3-bucket-security
  annotations:
    policies.kyverno.io/title: Audit S3 Bucket Security Policies
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Bucket
    policies.kyverno.io/description: >-
      Audit que les buckets S3 ont bien les policies de sécurité TLS 1.2 + HTTPS.
      Cette policy NE MODIFIE PAS les buckets, elle vérifie seulement.
spec:
  validationFailureAction: audit  # ✅ AUDIT seulement (pas de blocage)
  background: true
  rules:
    - name: check-tls-12-policy-present
      match:
        any:
          - resources:
              kinds:
                - Bucket
              apiGroups:
                - s3.aws.crossplane.io
      validate:
        message: |
          ⚠️ AUDIT : Ce bucket devrait avoir une policy TLS 1.2 minimum
          Note : Cette vérification est informative. La policy est injectée par Crossplane.
        deny:
          conditions:
            any:
              # Vérifie la présence de s3:TlsVersion dans la policy
              - key: "{{ contains(to_string(request.object.spec.forProvider.policy), 's3:TlsVersion') }}"
                operator: Equals
                value: false

    - name: check-https-policy-present
      match:
        any:
          - resources:
              kinds:
                - Bucket
              apiGroups:
                - s3.aws.crossplane.io
      validate:
        message: |
          ⚠️ AUDIT : Ce bucket devrait avoir une policy HTTPS.
          
          Policy attendue : aws:SecureTransport = false avec Effect Deny
          
          Note : Cette vérification est informative. La policy est injectée par Crossplane.
        deny:
          conditions:
            any:
              # Vérifie la présence de aws:SecureTransport dans la policy
              - key: "{{ contains(to_string(request.object.spec.forProvider.policy), 'aws:SecureTransport') }}"
                operator: Equals
                value: false

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: enforce-s3-claim-requirements
  annotations:
    policies.kyverno.io/title: Enforce S3 BucketClaim Requirements
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: BucketClaim, XBucket
    policies.kyverno.io/description: >-
      BLOQUE les BucketClaims qui ne spécifient pas requireSSL et encryption.
      Les buckets seront ensuite créés par Crossplane avec les bonnes policies.
spec:
  validationFailureAction: enforce  # ✅ ENFORCE sur les claims (bloque)
  background: true
  rules:
    - name: require-ssl-in-claims
      match:
        any:
          - resources:
              kinds:
                - BucketClaim
              apiGroups:
                - s3.aws.engie.org
      validate:
        message: |
          ❌ SÉCURITÉ OBLIGATOIRE : requireSSL doit être activé.
          
          Ce paramètre garantit que Crossplane créera le bucket avec :
          - Policy HTTPS obligatoire (aws:SecureTransport)
          - Policy TLS 1.2 minimum (s3:TlsVersion >= 1.2)
          
          Action requise : Ajoutez dans votre BucketClaim :
            spec:
              requireSSL: true
        pattern:
          spec:
            requireSSL: true

    - name: require-encryption-in-claims
      match:
        any:
          - resources:
              kinds:
                - BucketClaim
              apiGroups:
                - s3.aws.engie.org
      validate:
        message: |
          ❌ CHIFFREMENT OBLIGATOIRE : encryption doit être activé.
          
          Ce paramètre garantit que Crossplane créera le bucket avec :
          - Chiffrement AES-256 au repos
          - Blocage de l'accès public
          
          Action requise : Ajoutez dans votre BucketClaim :
            spec:
              encryption: true
        pattern:
          spec:
            encryption: true

    - name: require-ssl-in-xbuckets
      match:
        any:
          - resources:
              kinds:
                - XBucket
              apiGroups:
                - s3.aws.engie.org
      validate:
        message: |
          ❌ SÉCURITÉ OBLIGATOIRE : Le XBucket doit avoir requireSSL et encryption.
        pattern:
          spec:
            requireSSL: true
            encryption: true

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: enforce-s3-encryption-config
  annotations:
    policies.kyverno.io/title: Enforce S3 Encryption Configuration
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Bucket
spec:
  validationFailureAction: enforce  # ✅ ENFORCE (bloque si pas conforme)
  background: true
  rules:
    - name: require-server-side-encryption
      match:
        any:
          - resources:
              kinds:
                - Bucket
              apiGroups:
                - s3.aws.crossplane.io
      validate:
        message: |
          ❌ CHIFFREMENT MANQUANT : Le bucket doit avoir serverSideEncryptionConfiguration.
          
          Cette configuration doit être injectée par la composition Crossplane.
        pattern:
          spec:
            forProvider:
              serverSideEncryptionConfiguration:
                rules:
                  - applyServerSideEncryptionByDefault:
                      sseAlgorithm: "AES256 | aws:kms"

    - name: require-public-access-block
      match:
        any:
          - resources:
              kinds:
                - Bucket
              apiGroups:
                - s3.aws.crossplane.io
      validate:
        message: |
          ❌ ACCÈS PUBLIC NON BLOQUÉ : Le bucket doit avoir publicAccessBlockConfiguration.
          
          Cette configuration doit être injectée par la composition Crossplane.
        pattern:
          spec:
            forProvider:
              publicAccessBlockConfiguration:
                blockPublicAcls: true
                blockPublicPolicy: true
                ignorePublicAcls: true
                restrictPublicBuckets: true
