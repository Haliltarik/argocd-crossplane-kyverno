# apps/kyverno-policies/base/security-lockdown.yaml
#
# Policies to prevent developers from bypassing security controls
# by creating their own Compositions, XRDs, or directly creating AWS Buckets

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: block-direct-bucket-creation
  annotations:
    policies.kyverno.io/title: Block Direct AWS Bucket Creation
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: critical
    policies.kyverno.io/subject: Bucket
    policies.kyverno.io/description: >-
      Prevents developers from directly creating AWS Buckets without going
      through approved BucketClaims. Only Crossplane can create Buckets.
spec:
  validationFailureAction: enforce
  background: false
  rules:
    - name: deny-direct-bucket-creation-by-users
      match:
        any:
          - resources:
              kinds:
                - Bucket
              apiGroups:
                - s3.aws.crossplane.io
      exclude:
        any:
          # ✅ Allow only Crossplane ServiceAccounts
          - subjects:
              - kind: ServiceAccount
                name: crossplane
                namespace: crossplane-system
          - subjects:
              - kind: ServiceAccount
                name: crossplane-*
                namespace: crossplane-system
      validate:
        message: |
          ❌ ACCESS DENIED: Direct creation of S3 Buckets is not allowed.
          
          AWS Buckets must be created via BucketClaims to ensure
          enforcement of ENGIE security policies.
          
          Required action: Create a BucketClaim instead of a Bucket:
            apiVersion: s3.aws.engie.org/v1alpha1
            kind: BucketClaim
            spec:
              requireSSL: true
              encryption: true
          
          Documentation: https://wiki.engie.com/s3-bucket-creation
          Support: #platform-engineering
        deny: {}

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: block-unauthorized-compositions
  annotations:
    policies.kyverno.io/title: Block Unauthorized Crossplane Compositions
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: critical
    policies.kyverno.io/subject: Composition
    policies.kyverno.io/description: >-
      Prevents creation of non-approved Compositions. Only the platform
      team can create Compositions.
spec:
  validationFailureAction: enforce
  background: false
  rules:
    - name: deny-user-created-compositions
      match:
        any:
          - resources:
              kinds:
                - Composition
              apiGroups:
                - apiextensions.crossplane.io
      exclude:
        any:
          # ✅ Allow only platform admins
          - subjects:
              - kind: ServiceAccount
                name: argocd-*
                namespace: argocd
          - subjects:
              - kind: ServiceAccount
                name: crossplane
                namespace: crossplane-system
          - subjects:
              - kind: Group
                name: platform-engineering  # Your admin group
      validate:
        message: |
          ❌ ACCESS DENIED: Creation of Crossplane Compositions is not allowed.
          
          Compositions are centrally managed by the Factory team
          to ensure compliance and security.
          
          If you need a new Composition:
          1. Create a request: https://engie-dmpa-dsi-digital.atlassian.net/jira
          2. The Factory team will validate and create the Composition
          3. You can then use it in your BucketClaims
          
          Available approved Compositions:
          - s3bucket-secure (recommended)
          - s3bucket-default (legacy, not recommended)
          
          Documentation: https://wiki.engie.com/crossplane-compositions
          Support: #platform-engineering
        deny: {}

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: block-unauthorized-xrds
  annotations:
    policies.kyverno.io/title: Block Unauthorized XRD Creation
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: critical
    policies.kyverno.io/subject: CompositeResourceDefinition
    policies.kyverno.io/description: >-
      Prevents creation of non-approved XRDs (Custom Resource Definitions).
      Only the platform team can create XRDs.
spec:
  validationFailureAction: enforce
  background: false
  rules:
    - name: deny-user-created-xrds
      match:
        any:
          - resources:
              kinds:
                - CompositeResourceDefinition
              apiGroups:
                - apiextensions.crossplane.io
      exclude:
        any:
          # ✅ Allow only platform admins
          - subjects:
              - kind: ServiceAccount
                name: argocd-*
                namespace: argocd
          - subjects:
              - kind: ServiceAccount
                name: crossplane
                namespace: crossplane-system
          - subjects:
              - kind: Group
                name: platform-engineering
      validate:
        message: |
          ❌ ACCESS DENIED: Creation of XRD (CompositeResourceDefinition) is not allowed.
          
          XRDs define the platform API and are centrally managed
          by the platform team.
          
          If you need a new resource type:
          1. Create a request: https://engie-dmpa-dsi-digital.atlassian.net/jira
          2. Justify the business need
          3. The platform team will evaluate and create the XRD if approved
          
          Available XRDs:
          - xbuckets.s3.aws.engie.org (S3 Buckets)
          
          Documentation: https://wiki.engie.com/crossplane-xrds
          Support: #platform-engineering
        deny: {}

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: enforce-approved-compositions-only
  annotations:
    policies.kyverno.io/title: Enforce Approved Compositions Only
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: BucketClaim
    policies.kyverno.io/description: >-
      Enforces use of approved compositions in BucketClaims.
      Prevents use of non-validated compositions.
spec:
  validationFailureAction: enforce
  background: true
  rules:
    - name: require-approved-composition
      match:
        any:
          - resources:
              kinds:
                - BucketClaim
              apiGroups:
                - s3.aws.engie.org
      validate:
        message: |
          ❌ COMPOSITION NOT APPROVED: This composition is not authorized.
          
          Approved compositions:
          - s3bucket-secure (recommended - with all protections)
          - s3bucket-default (legacy - not recommended)
          
          Your claim uses: {{ request.object.spec.compositionRef.name }}
          
          Required action: Use an approved composition:
            spec:
              compositionRef:
                name: s3bucket-secure
          
          Documentation: https://wiki.engie.com/approved-compositions
        pattern:
          spec:
            compositionRef:
              name: "s3bucket-secure | s3bucket-default"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: block-namespace-crossplane-resources
  annotations:
    policies.kyverno.io/title: Block Crossplane Resources Outside Authorized Namespaces
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Bucket, BucketClaim
    policies.kyverno.io/description: >-
      Prevents creation of Crossplane resources outside authorized namespaces.
spec:
  validationFailureAction: enforce
  background: false
  rules:
    - name: restrict-crossplane-resources-namespace
      match:
        any:
          - resources:
              kinds:
                - BucketClaim
              apiGroups:
                - s3.aws.engie.org
              namespaces:
                - "!crossplane-system"  # BucketClaims MUST be in crossplane-system
      validate:
        message: |
          ❌ NAMESPACE NOT AUTHORIZED: BucketClaims must be created in crossplane-system.
          
          Current namespace: {{ request.namespace }}
          Required namespace: crossplane-system
          
          Required action: Create your BucketClaim in the crossplane-system namespace:
            kubectl apply -f my-claim.yaml -n crossplane-system
        deny: {}

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: audit-composition-changes
  annotations:
    policies.kyverno.io/title: Audit All Composition Changes
    policies.kyverno.io/category: Security
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Composition
    policies.kyverno.io/description: >-
      Records all Composition modifications for audit purposes.
spec:
  validationFailureAction: audit  # Audit mode (doesn't block, just logs)
  background: false
  rules:
    - name: audit-composition-modifications
      match:
        any:
          - resources:
              kinds:
                - Composition
              apiGroups:
                - apiextensions.crossplane.io
      validate:
        message: |
          ℹ️ AUDIT: Composition modified or created.
          
          Name: {{ request.object.metadata.name }}
          User: {{ request.userInfo.username }}
          Action: {{ request.operation }}
          Timestamp: {{ time_now_utc() }}
        deny:
          conditions:
            any:
              # This condition is always false, so it never blocks
              # But generates an audit event
              - key: "false"
                operator: Equals
                value: "true"